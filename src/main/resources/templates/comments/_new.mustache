<div class="card a-2" id="comments-new">
    <div class="card-body">
        <!-- 댓글 작성 -->
        <form>
            <!--닉네임 입력-->
            <div class="mb-3">
                <label  class="form-label">닉네임</label>
                <input id="new-comment-nickname" class="form-control form-control-sm">
            </div>
            <!-- 댓글 본문 작성 -->
            <div class="mb-3">
                <label  class="form-label">댓글 내용</label>
                <textarea type="email" class="form-control form=control-sm" id="new-comment-body"></textarea>
            </div>

            <!-- 히든 인풋 -->
            {{#board}}
            <input type="hidden" id="new-comment-board-id" value="{{id}}">
            {{/board}}

            <!-- 전송 버튼 -->
            <button type="button" class="btn btn-outline-primary btn-sm" id="comment-create-btn">댓글 작성</button>
        </form>
    </div>
</div>

<script>
    {
    <!-- 댓글 생성 버튼 변수화(id가 comment-create-btn인 대상)-->
        const commentCreateBtn = document.querySelector("#comment-create-btn");

        <!-- 버튼 클릭 이벤트를 감지! -->
        commentCreateBtn.addEventListener("click", function() { <!-- commentCreateBtn에서 click이 감지되면 function을 실행하는 것-->
            <!-- 새 댓글 객체 생성-->
            const comment = { <!-- const는 변하지 않는 객체로 만들어주는 것-->
                nickname: document.querySelector("#new-comment-nickname").value,
                body: document.querySelector("#new-comment-body").value,
                board_id: document.querySelector("#new-comment-board-id").value
            };

            <!-- 댓글 콘솔 출력-->
            console.log(comment);
            // fetch() - Talend API 요청을 JavaScript로 보내주는 기능!
            const url = "/api/boards/" + comment.board_id + "/comments";
            fetch(url, {                            <!-- 두개의 인자를 받음, url과 어떻게 보낸지에 대한 내용들 -->
                method: "post", // 포스트 요청
                body: JSON.stringify(comment),          // comment JS객체를 JSON으로 변환하여 보냄
                headers: {
                    "Content-Type": "application/json"  // 바디에 실어서 보내는데, 그 바디에 내용이 json타입이라는 것을 명시해주는 것
                }
            }).then(response => { // 응답이 온다면
                // http 응답 코드에 따른 메세지 출력
                const msg = (response.ok) ? "댓글이 등록되었습니다." : "댓글 등록 실패";
                alert(msg);
                // 현재 페이지 새로고침
                window.location.reload();
            });
        });
    }
</script>